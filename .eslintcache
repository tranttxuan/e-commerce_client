[{"/home/quang/xuan/PROJECT/e_commerce/client/src/index.js":"1","/home/quang/xuan/PROJECT/e_commerce/client/src/App.js":"2","/home/quang/xuan/PROJECT/e_commerce/client/src/pages/Home.jsx":"3","/home/quang/xuan/PROJECT/e_commerce/client/src/components/NavBar/NavBar.jsx":"4","/home/quang/xuan/PROJECT/e_commerce/client/src/components/Banner/Banner.jsx":"5","/home/quang/xuan/PROJECT/e_commerce/client/src/components/Product/Product.jsx":"6","/home/quang/xuan/PROJECT/e_commerce/client/src/data.js":"7","/home/quang/xuan/PROJECT/e_commerce/client/src/pages/OneProduct.jsx":"8","/home/quang/xuan/PROJECT/e_commerce/client/src/api/apiHandler.js":"9","/home/quang/xuan/PROJECT/e_commerce/client/src/store.js":"10","/home/quang/xuan/PROJECT/e_commerce/client/src/components/ProductsGrid/ProductsGrid.jsx":"11","/home/quang/xuan/PROJECT/e_commerce/client/src/actions/productActions.js":"12","/home/quang/xuan/PROJECT/e_commerce/client/src/constants/productConstants.js":"13","/home/quang/xuan/PROJECT/e_commerce/client/src/reducers/productReducers.js":"14","/home/quang/xuan/PROJECT/e_commerce/client/src/reducers/cartReducer.js":"15","/home/quang/xuan/PROJECT/e_commerce/client/src/constants/cartConstants.js":"16","/home/quang/xuan/PROJECT/e_commerce/client/src/pages/Cart.jsx":"17","/home/quang/xuan/PROJECT/e_commerce/client/src/actions/cartAction.js":"18","/home/quang/xuan/PROJECT/e_commerce/client/src/pages/SignIn.jsx":"19","/home/quang/xuan/PROJECT/e_commerce/client/src/reducers/userReducer.js":"20","/home/quang/xuan/PROJECT/e_commerce/client/src/constants/userConstants.js":"21","/home/quang/xuan/PROJECT/e_commerce/client/src/actions/userAction.js":"22","/home/quang/xuan/PROJECT/e_commerce/client/src/components/LoadingBox/LoadingBox.js":"23","/home/quang/xuan/PROJECT/e_commerce/client/src/pages/Signup.jsx":"24","/home/quang/xuan/PROJECT/e_commerce/client/src/components/MessageBox/MessageBox.jsx":"25","/home/quang/xuan/PROJECT/e_commerce/client/src/pages/ShippingAddress.jsx":"26","/home/quang/xuan/PROJECT/e_commerce/client/src/components/CheckOutSteps/CheckOutSteps.js":"27","/home/quang/xuan/PROJECT/e_commerce/client/src/pages/Payment.jsx":"28","/home/quang/xuan/PROJECT/e_commerce/client/src/pages/PlaceOrder.jsx":"29","/home/quang/xuan/PROJECT/e_commerce/client/src/actions/orderActions.js":"30","/home/quang/xuan/PROJECT/e_commerce/client/src/constants/orderConstants.js":"31","/home/quang/xuan/PROJECT/e_commerce/client/src/reducers/orderReducer.js":"32"},{"size":390,"mtime":1611955714948,"results":"33","hashOfConfig":"34"},{"size":1206,"mtime":1612297182874,"results":"35","hashOfConfig":"34"},{"size":363,"mtime":1612216060143,"results":"36","hashOfConfig":"34"},{"size":3189,"mtime":1612272324322,"results":"37","hashOfConfig":"34"},{"size":411,"mtime":1611932749975,"results":"38","hashOfConfig":"34"},{"size":1073,"mtime":1611968274490,"results":"39","hashOfConfig":"34"},{"size":1313,"mtime":1611949524133,"results":"40","hashOfConfig":"34"},{"size":13884,"mtime":1612274807527,"results":"41","hashOfConfig":"34"},{"size":1891,"mtime":1612308436264,"results":"42","hashOfConfig":"34"},{"size":1509,"mtime":1612308828163,"results":"43","hashOfConfig":"34"},{"size":2388,"mtime":1612108739811,"results":"44","hashOfConfig":"34"},{"size":1277,"mtime":1611961518276,"results":"45","hashOfConfig":"34"},{"size":360,"mtime":1611959008286,"results":"46","hashOfConfig":"34"},{"size":1127,"mtime":1611960215144,"results":"47","hashOfConfig":"34"},{"size":1643,"mtime":1612304010250,"results":"48","hashOfConfig":"34"},{"size":273,"mtime":1612303941869,"results":"49","hashOfConfig":"34"},{"size":5725,"mtime":1612216083863,"results":"50","hashOfConfig":"34"},{"size":1644,"mtime":1612296629342,"results":"51","hashOfConfig":"34"},{"size":2272,"mtime":1612275293255,"results":"52","hashOfConfig":"34"},{"size":1043,"mtime":1612278198409,"results":"53","hashOfConfig":"34"},{"size":381,"mtime":1612277283472,"results":"54","hashOfConfig":"34"},{"size":1863,"mtime":1612296984220,"results":"55","hashOfConfig":"34"},{"size":349,"mtime":1612273578048,"results":"56","hashOfConfig":"34"},{"size":3343,"mtime":1612279661027,"results":"57","hashOfConfig":"34"},{"size":354,"mtime":1612274889768,"results":"58","hashOfConfig":"34"},{"size":3237,"mtime":1612295150453,"results":"59","hashOfConfig":"34"},{"size":688,"mtime":1612280704503,"results":"60","hashOfConfig":"34"},{"size":2184,"mtime":1612297093690,"results":"61","hashOfConfig":"34"},{"size":4739,"mtime":1612308073906,"results":"62","hashOfConfig":"34"},{"size":1381,"mtime":1612308535901,"results":"63","hashOfConfig":"34"},{"size":407,"mtime":1612308355728,"results":"64","hashOfConfig":"34"},{"size":1097,"mtime":1612308735506,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1bne5vl",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/quang/xuan/PROJECT/e_commerce/client/src/index.js",[],["140","141"],"/home/quang/xuan/PROJECT/e_commerce/client/src/App.js",["142"],"/home/quang/xuan/PROJECT/e_commerce/client/src/pages/Home.jsx",["143"],"import React from \"react\";\nimport Banner from \"../components/Banner/Banner\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport ProductsGrid from \"../components/ProductsGrid/ProductsGrid\";\n\n\nfunction Home() {\n    return (\n        <div className=\"container\">\n            <Banner />\n            <ProductsGrid />\n        </div>\n\n    );\n}\n\nexport default Home;\n","/home/quang/xuan/PROJECT/e_commerce/client/src/components/NavBar/NavBar.jsx",["144","145"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport OpenWithIcon from \"@material-ui/icons/OpenWith\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\nimport \"./NavBar.scss\";\nimport { Button, IconButton } from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signout } from \"../../actions/userAction\";\n\nfunction NavBar() {\n    const [searchValue, setSearchValue] = useState(\"\");\n    const handleAuthentication = (even) => { };\n    const cart = useSelector(state => state.cart);\n    const { cartItems } = cart;\n\n    const userSignin = useSelector(state => state.userSignin)\n    const { userInfo } = userSignin;\n\n    const dispatch = useDispatch();\n\n    const handleSignOut = () => {\n        console.log(\"sign out\")\n        dispatch(signout())\n    }\n\n    console.log(\"check userInfo\", userInfo)\n\n    return (\n        <header className=\"header\">\n            <Link to=\"/\" className=\"header__logo\">\n                <OpenWithIcon />\n                <h1>aMaZ</h1>\n            </Link>\n\n            <div className=\"header__search\">\n                <input className=\"header__search--input\" type=\"text\" />\n                <Button>\n                    {\" \"}\n                    <SearchIcon className=\"header__search--icon\" />\n                </Button>\n            </div>\n\n            <div className=\"header__nav\">\n                <div className=\"header__option\" onClick={handleAuthentication}>\n                    <Button className=\"header__optionLineOne\" color=\"inherit\">\n                        Hello, {userInfo ? userInfo.name : \"Guest\"}\n                    </Button>\n                    {userInfo \n                    ?\n                        <Button className=\"header__optionLineTwo\" color=\"inherit\"\n                            onClick={handleSignOut}>\n                            Sign Out\n                        </Button>\n                        :\n                         <Link to=\"/signin\">\n                            <Button className=\"header__optionLineTwo\" color=\"inherit\">\n                                Sign In\n                            </Button>\n                        </Link>\n\n                    }\n                </div>\n\n                <div className=\"header__option\">\n                    <Button className=\"header__optionLineOne\" color=\"inherit\">\n                        Return\n                    </Button>\n                    <Button className=\"header__optionLineTwo\" color=\"inherit\">\n                        & Orders\n                    </Button>\n                </div>\n\n                <Link to=\"/checkout\">\n                    <div className=\"header__optionBasket\">\n                        <IconButton color=\"inherit\">\n                            <Badge badgeContent={cartItems.length > 0 ? cartItems.length : 0} color=\"primary\">\n                                <ShoppingBasketIcon />\n                            </Badge>\n                        </IconButton>\n                    </div>\n                </Link>\n            </div>\n        </header>\n    );\n}\n\nexport default NavBar;\n","/home/quang/xuan/PROJECT/e_commerce/client/src/components/Banner/Banner.jsx",[],"/home/quang/xuan/PROJECT/e_commerce/client/src/components/Product/Product.jsx",["146"],"import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport \"./Product.scss\";\nimport Rating from \"@material-ui/lab/Rating\";\n\nfunction Product({ name, image, price, rating, numReviews }) {\n    return (\n        <div className=\"product\">\n            <img src={image} alt=\"image\" />\n\n            <div className=\"product__info\">\n                {name.length > name.substring(0, 100).length ? (\n                    <p>{name.substring(0, 80)}... </p>\n                ) : (\n                    <p className=\"product__info--name\"> {name} </p>\n                )}\n                <p className=\"product__price\">\n                    <span>$</span> <strong>{price}</strong>\n                </p>\n\n                <div className=\"product__rating\">\n                    <Rating className=\"rating\" name=\"half-rating-read\" value={rating}  precision={0.5} readOnly /> \n                    <small>{numReviews} reviews</small>\n                </div>\n            </div>\n\n            <Button className=\"btn\">Add to Basket</Button>\n        </div>\n    );\n}\n\nexport default Product;\n","/home/quang/xuan/PROJECT/e_commerce/client/src/data.js",["147"],"/home/quang/xuan/PROJECT/e_commerce/client/src/pages/OneProduct.jsx",["148"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./OneProduct.scss\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { DetailsProduct } from \"../actions/productActions\";\nimport { Alert, AlertTitle, Rating } from \"@material-ui/lab\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport LoadingBox from \"../components/LoadingBox/LoadingBox\";\nimport MessageBox from \"../components/MessageBox/MessageBox\";\n\nfunction OneProduct(props) {\n    const [selectedImage, setSelectedImage] = useState(\"\");\n    const [quantity, setQuantity] = useState(1);\n    const [rating, setRating] = useState(0);\n    const [comment, setComment] = useState(\"\");\n\n    const productId = props.match.params.id;\n    const productDetails = useSelector((state) => state.productDetails);\n    const { loading, error, product } = productDetails;\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(DetailsProduct(productId));\n    }, []);\n\n    const changeImage = (image) => {\n        setSelectedImage(image);\n    };\n\n    const handleAddToCart = (event) => {\n        props.history.push(`/cart/${productId}?quantity=${quantity}`);\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <Fragment>\n\n            {loading ? (\n                <LoadingBox />\n            ) : error ? (\n                <MessageBox error={true}>{error}</MessageBox>\n            ) : (\n                        //INFO\n                        <div className=\"one-product container\" >\n                            <Link to=\"/\" className=\"one-product__back-icon\">\n                                <ArrowBackIcon />\n                                 Back to result\n                            </Link>\n\n                            <Grid container justify={\"space-around\"}>\n                                <Grid item xs={12} sm={6} >\n                                    <div className=\"one-product__img-prod\">\n                                        <img\n                                            src={product.image || selectedImage}\n                                            alt={product.name}\n                                        />\n                                    </div>\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={6} md={3}>\n                                    <ul>\n                                        <li>\n                                            <h1>{product.name}</h1>\n                                        </li>\n\n                                        <li>\n                                            <a href=\"#reviews\">\n                                                <Rating\n                                                    name=\"half-rating-read\"\n                                                    value={product.rating}\n                                                    precision={0.5}\n                                                    readOnly\n                                                />\n                                                {product.numReviews} reviews\n                                    </a>\n                                        </li>\n\n                                        <li>\n                                            <strong>Price: </strong>${product.price}\n                                        </li>\n\n                                        <li>\n                                            <strong>Description: </strong>\n                                            <p>{product.description}</p>\n                                        </li>\n\n                                        <li>\n                                            <strong>Images:</strong>\n                                            <ul className=\"one-product__images\">\n                                                {[product.image, ...product.images].map((prod) => (\n                                                    <li key={prod}>\n                                                        <button\n                                                            type=\"button\"\n                                                            //   className=\"light\"\n                                                            onClick={() => changeImage(prod)}\n                                                        >\n                                                            <img\n                                                                src={prod}\n                                                                alt=\"product\"\n                                                                className=\"small\"\n                                                            />\n                                                        </button>\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </li>\n                                    </ul>\n                                </Grid>\n\n                                {/* ORDER  */}\n                                <Grid item xs={12} sm={6} md={3} className=\"one-product__seller\">\n                                    <div>\n                                        <ul>\n                                            <li>\n                                                Seller\n                                                <h2>\n                                                    <Link to={`/seller/${product.seller._id}`}>\n                                                        {product?.seller?.seller?.name}\n                                                    </Link>\n                                                </h2>\n                                                <Rating\n                                                    className=\"rating\"\n                                                    name=\"half-rating-read\"\n                                                    value={product?.seller?.seller?.rating}\n                                                    precision={0.5}\n                                                    readOnly\n                                                />\n                                                {product?.seller?.seller?.numReviews} reviews\n                                              </li>\n\n                                            <li>\n                                                <Grid container justify={\"space-between\"}>\n                                                    <div>Price</div>\n                                                    <div>\n                                                        <div className=\"price\">${product.price}</div>\n                                                    </div>\n                                                </Grid>\n                                            </li>\n\n                                            <li>\n                                                <Grid container justify={\"space-between\"}>\n                                                    <div>Status</div>\n                                                    <div>\n                                                        {product.countInStock > 0 ? (\n                                                            <span className=\"success\">In Stock</span>\n                                                        ) : (\n                                                                <span className=\"danger\">Unavailable</span>\n                                                            )}\n                                                    </div>\n                                                </Grid>\n                                            </li>\n\n                                            {product.countInStock > 0 && (\n                                                <Fragment>\n                                                    <li>\n                                                        <Grid container justify={\"space-between\"}>\n                                                            <div>Quantity: </div>\n                                                            <div>\n                                                                <select\n                                                                    value={quantity}\n                                                                    onChange={(e) => {\n                                                                        setQuantity(e.target.value);\n                                                                    }}\n                                                                >\n                                                                    {[\n                                                                        ...Array(\n                                                                            product.countInStock\n                                                                        ).keys(),\n                                                                    ].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))}\n                                                                </select>\n                                                            </div>\n                                                        </Grid>\n                                                    </li>\n\n                                                    <li>\n                                                        <Button\n                                                            className=\"btn\"\n                                                            type=\"button\"\n                                                            onClick={handleAddToCart}\n                                                        >\n                                                            Add to Cart\n                                                </Button>\n                                                    </li>\n                                                </Fragment>\n                                            )}\n                                        </ul>\n                                    </div>\n                                </Grid>\n                            </Grid>\n\n                            {/* REVIEWS */}\n                            <div className=\"container add-reviews\">\n                                <h2 id=\"reviews\">Reviews</h2>\n\n                                {!product.reviews.length && (\n                                    <Alert severity=\"info\">\n                                        <AlertTitle>Info:   No review</AlertTitle>\n                                    </Alert>\n                                )}\n\n                                <ul>\n                                    {product.reviews.map((review) => (\n                                        <li key={review._id}>\n                                            <strong>{review.name}</strong>\n\n                                            <Rating value={review.rating} />\n\n                                            <p>{review.createdAt.substring(0, 10)}</p>\n                                            <p>{review.comment}</p>\n                                        </li>\n                                    ))}\n                                </ul>\n                                {/* {userInfo?  */}\n                                <form onSubmit={submitHandler}>\n                                    <div>\n                                        <h2>Write a customer review</h2>\n                                    </div>\n                                    <div>\n                                        <label htmlFor=\"rating\">Rating</label>\n                                        <select\n                                            id=\"rating\"\n                                            value={rating}\n                                            onChange={(e) => setRating(e.target.value)}\n                                        >\n                                            <option value=\"1\">1- Poor</option>\n                                            <option value=\"2\">2- Fair</option>\n                                            <option value=\"3\">3- Good</option>\n                                            <option value=\"4\">4- Very Good</option>\n                                            <option value=\"5\">5- Excelent</option>\n                                        </select>\n                                    </div>\n                                    <div>\n                                        <label htmlFor=\"comment\">Comment</label>\n                                        <textarea\n                                            rows=\"5\"\n                                            id=\"comment\"\n                                            value={comment}\n                                            onChange={(e) => setComment(e.target.value)}\n                                        />\n                                    </div>\n\n\n                                    <Button className=\"btn\" type=\"submit\">\n                                        Submit\n                                    </Button>\n\n\n                                </form>\n\n                                {/* if not sign in, go to sign in  */}\n\n                            </div>\n                        </div>\n                    )}\n        </Fragment>\n    );\n}\n\nexport default OneProduct;\n","/home/quang/xuan/PROJECT/e_commerce/client/src/api/apiHandler.js",["149","150"],"/home/quang/xuan/PROJECT/e_commerce/client/src/store.js",[],"/home/quang/xuan/PROJECT/e_commerce/client/src/components/ProductsGrid/ProductsGrid.jsx",["151"],"import React, { Fragment, useEffect } from 'react';\nimport Product from '../Product/Product';\nimport { NavLink } from 'react-router-dom';\nimport {Skeleton, Alert} from '@material-ui/lab';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ListProducts } from \"../../actions/productActions\";\n// import \"./ProductsGrid.scss\"\nimport { CircularProgress, Grid } from '@material-ui/core';\n\nfunction ProductsGrid() {\n     const dispatch = useDispatch();\n     const productList = useSelector(state => state.productList)\n     const { loading, error, products } = productList;\n\n     useEffect(() => {\n          dispatch(ListProducts())\n     }, []);\n\n     return (\n\n          <Fragment>\n               {\n                    loading ?\n                    <div>\n                    <CircularProgress />\n                    <Skeleton animation=\"wave\" width=\"100%\" height=\"100%\" />\n                    </div>\n                        \n                         : error ?\n                              <Alert variant=\"filled\" severity=\"error\">{error}</Alert>\n                              :\n                              <Grid className=\"grid--container\" \n                              container \n                              // spacing={3} \n                              // direction=\"row\"\n                              justify=\"space-around\"\n                              alignItems=\"center\"\n                              >\n                                   {products.map(({ _id, name, image, price, rating, numReviews }) => (\n                                        <NavLink to={`/product/${_id}`} key={_id}>\n                                             <Product\n                                             item\n                                             xs={12}\n                                                  name={name}\n                                                  rating={rating}\n                                                  price={price}\n                                                  image={image}\n                                                  numReviews={numReviews}\n                                             />\n                                        </NavLink>\n\n                                   ))\n                                   }\n                              </Grid>\n               }\n          </Fragment>\n     )\n}\n\nexport default ProductsGrid;\n","/home/quang/xuan/PROJECT/e_commerce/client/src/actions/productActions.js",[],"/home/quang/xuan/PROJECT/e_commerce/client/src/constants/productConstants.js",[],"/home/quang/xuan/PROJECT/e_commerce/client/src/reducers/productReducers.js",[],"/home/quang/xuan/PROJECT/e_commerce/client/src/reducers/cartReducer.js",[],"/home/quang/xuan/PROJECT/e_commerce/client/src/constants/cartConstants.js",[],"/home/quang/xuan/PROJECT/e_commerce/client/src/pages/Cart.jsx",["152","153"],"import React, { Fragment, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToCart, removeFromCart } from '../actions/cartAction';\nimport { Button, CircularProgress, Grid } from \"@material-ui/core\";\nimport { Alert } from '@material-ui/lab';\nimport { Link } from 'react-router-dom';\nimport \"./Cart.scss\";\nimport NavBar from '../components/NavBar/NavBar';\n\n\nfunction Cart(props) {\n     const productId = props.match.params.id;\n     const quantity = props.location.search\n          ? Number(props.location.search.split(\"=\")[1])\n          : 1;\n     const dispatch = useDispatch();\n\n     //get data from redux\n     const cart = useSelector((state) => state.cart)\n     const { cartItems } = cart;\n\n     useEffect(() => {\n          if (productId) {\n               dispatch(addToCart(productId, quantity))\n          }\n     }, [dispatch, productId, quantity])\n\n     const removeFromCartHandler = (id) => {\n          //delete action\n          dispatch(removeFromCart(id))\n     }\n\n     const checkOutHandler = (params) => {\n          props.history.push(\"/signin?redirect=shipping\");\n     }\n\n     console.log(cartItems)\n     return (\n          <Grid container className=\"cart-page\" justify=\"space-around\">\n               <Grid item>\n                    <h1>Shopping Cart</h1>\n                    <table>\n                         <tbody>\n\n\n                              {cartItems.length === 0 ?\n                                   <tr>\n                                        <td colSpan=\"4\">\n                                             <Alert severity=\"info\">Cart empty.\n                                        <Link to=\"/\" className=\"go-shopping\"> Go Shopping</Link>\n                                             </Alert>\n                                        </td>\n                                   </tr>\n\n                                   :\n                                   (\n                                        <Fragment>\n                                             {cartItems.map((item, i) => (\n                                                  <tr key={i}>\n                                                       <td>\n                                                            <img src={item.image} alt={item.name} />\n                                                       </td>\n                                                       <td>\n                                                            <Link to={`/product/${item.product}`}>\n                                                                 {item.name}\n                                                            </Link>\n                                                       </td>\n                                                       <td>\n                                                            <select\n                                                                 value={item.quantity}\n                                                                 onChange={(e) =>\n                                                                      dispatch(addToCart(item.product, Number(e.target.value)))}>\n                                                                 {[...Array(item.countInStock)\n                                                                      .keys()].map((x) => (\n                                                                           <option key={x + 1} value={x + 1}>\n                                                                                {x + 1}\n                                                                           </option>\n                                                                      ))}\n                                                            </select>\n                                                       </td>\n                                                       <td>$ {item.price}</td>\n                                                       <td>\n                                                            <Button\n                                                                 onClick={() => removeFromCartHandler(item.product)}\n                                                                 className=\"btn btn-extra\">\n                                                                 Delete\n                                                                 </Button>\n                                                       </td>\n                                                  </tr>\n                                             ))}\n                                        </Fragment>\n                                   )\n                              }\n                         </tbody>\n                    </table>\n               </Grid>\n               <Grid item className=\"checkout\">\n                    <div>\n                         <ul>\n                              <li>\n                                   <h2>\n                                        Subtotal ({cartItems.reduce((a, c) => a + c.quantity, 0)}  items) : $\n                    {cartItems.reduce((a, c) => a + c.price * c.quantity, 0)}\n                                   </h2>\n                              </li>\n                              <li>\n                                   <Button\n                                        className=\"btn\"\n                                        disabled={cartItems.length === 0}\n                                        onClick={checkOutHandler}>\n                                        Proceed to checkout\n                                        </Button>\n                              </li>\n                         </ul>\n                    </div>\n               </Grid>\n          </Grid>\n\n     )\n}\n\nexport default Cart\n","/home/quang/xuan/PROJECT/e_commerce/client/src/actions/cartAction.js",[],"/home/quang/xuan/PROJECT/e_commerce/client/src/pages/SignIn.jsx",["154","155"],"import { Button, TextField } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { signin } from '../actions/userAction'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LoadingBox from '../components/LoadingBox/LoadingBox';\nimport MessageBox from '../components/MessageBox/MessageBox';\n\nfunction SignIn(props) {\n    const [email, setEmail] = useState('xuan@gmail.com')\n    const [password, setPassword] = useState('Tran123')\n    const dispatch = useDispatch();\n\n    const redirect = props.location.search\n        ? props.location.search.split('=')[1]\n        : '/';\n\n    const userSignin = useSelector(state => state.userSignin)\n    const { userInfo, loading, error } = userSignin;\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        //    console.log(email, password)\n        dispatch(signin(email, password));\n    }\n\n    useEffect(() => {\n        if (userInfo) {\n            props.history.push(redirect)\n        }\n    }, [userInfo])\n\n    return (\n        <div>\n            <form className=\"form-auth\" onSubmit={submitHandler}>\n                <div>\n                    <h1>Sign In</h1>\n                </div>\n                {loading && <LoadingBox />}\n                {error &&\n                    <MessageBox error={true}>{error}</MessageBox>}\n                <TextField\n                    label=\"Email\"\n                    variant=\"filled\"\n                    type=\"email\"\n                    required\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                />\n\n                <TextField\n                    label=\"Password\"\n                    variant=\"filled\"\n                    type=\"password\"\n                    required\n                    value={password}\n\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n\n\n                <button className=\"btn\" onSubmit={submitHandler}>Sign in</ button>\n\n                <div>\n                    New customer? <Link to=\"/register\" >\n                        <strong><em>Create your account</em></strong>\n                    </Link>\n                </div>\n\n            </form>\n\n        </div>\n    )\n}\n\nexport default SignIn\n","/home/quang/xuan/PROJECT/e_commerce/client/src/reducers/userReducer.js",[],"/home/quang/xuan/PROJECT/e_commerce/client/src/constants/userConstants.js",[],"/home/quang/xuan/PROJECT/e_commerce/client/src/actions/userAction.js",[],"/home/quang/xuan/PROJECT/e_commerce/client/src/components/LoadingBox/LoadingBox.js",[],"/home/quang/xuan/PROJECT/e_commerce/client/src/pages/Signup.jsx",["156"],"import { TextField } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LoadingBox from '../components/LoadingBox/LoadingBox';\nimport MessageBox from '../components/MessageBox/MessageBox';\nimport { register } from '../actions/userAction'\n\n\nfunction Signup(props) {\n    const [password, setPassword] = useState('Tran123');\n    const [confirmPassword, setConfirmPassword] = useState('Tran123');\n    const [email, setEmail] = useState(\"xuan@gmail.com\");\n    const [name, setName] = useState('TXuan')\n\n    const dispatch = useDispatch();\n    const userSignup = useSelector((state) => state.userSignup);\n    const { userInfo, loading, error } = userSignup;\n    // *******************************************************************\n    // ****************************************************\n    // 5:30 why use redirect \n    // *******************************************************************\n    // ****************************************************\n    const redirect = props.location.search\n        ? props.location.search.split('=')[1]\n        : '/';\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        if (password !== confirmPassword) {\n            return alert('Password and confirm password are not the same');\n        }\n        dispatch(register(name, email, password))\n    }\n\n    useEffect(() => {\n        if (userInfo) {\n            props.history.push(redirect)\n        }\n    }, [userInfo])\n    return (\n        <div>\n            <form className=\"form-auth\" onSubmit={submitHandler}>\n                <div>\n                    <h1>Sign Up</h1>\n                </div>\n\n                {loading && <LoadingBox />}\n                {error && <MessageBox error={true}>{error}</MessageBox>}\n\n                <TextField\n                    label=\"Name\"\n                    variant=\"filled\"\n                    type=\"name\"\n                    required\n                    value={name}\n                    onChange={e => setName(e.target.value)}\n                />\n                <TextField\n                    label=\"Email\"\n                    variant=\"filled\"\n                    type=\"email\"\n                    required\n                    value={email}\n                    onChange={e => setEmail(e.target.value)}\n                />\n                <TextField\n                    label=\"Password\"\n                    variant=\"filled\"\n                    type=\"password\"\n                    required\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <TextField\n                    label=\"Confirm password\"\n                    variant=\"filled\"\n                    type=\"password\"\n                    required\n                    value={confirmPassword}\n                    onChange={e => setConfirmPassword(e.target.value)}\n                />\n\n                <button className=\"btn\" onSubmit={submitHandler}>Register</ button>\n\n                <div>\n                    Already have an account? <Link to=\"/signin\" >\n                        <strong><em>Sign-in</em></strong>\n                    </Link>\n                </div>\n\n            </form>\n        </div>\n    )\n}\n\nexport default Signup\n","/home/quang/xuan/PROJECT/e_commerce/client/src/components/MessageBox/MessageBox.jsx",[],"/home/quang/xuan/PROJECT/e_commerce/client/src/pages/ShippingAddress.jsx",[],"/home/quang/xuan/PROJECT/e_commerce/client/src/components/CheckOutSteps/CheckOutSteps.js",["157"],"import { Step, StepLabel, Stepper } from '@material-ui/core';\nimport React from 'react'\nimport \"./CheckOutSteps.scss\"\n\n\nfunction getSteps() {\n    return ['Sign-in', 'Shipping', 'Payment', 'Place Order'];\n}\n\n\nfunction CheckOutSteps(props) {\n    const steps = getSteps();\n    const [activeStep, setActiveStep] = React.useState(props.steps);\n\n    return (\n        <div>\n            <Stepper activeStep={activeStep} alternativeLabel>\n                {steps.map((label) => (\n                    <Step key={label}>\n                        <StepLabel>{label}</StepLabel>\n                    </Step>\n                ))}\n            </Stepper>\n        </div>\n    )\n}\n\nexport default CheckOutSteps\n","/home/quang/xuan/PROJECT/e_commerce/client/src/pages/Payment.jsx",[],"/home/quang/xuan/PROJECT/e_commerce/client/src/pages/PlaceOrder.jsx",["158"],"/home/quang/xuan/PROJECT/e_commerce/client/src/actions/orderActions.js",[],"/home/quang/xuan/PROJECT/e_commerce/client/src/constants/orderConstants.js",[],"/home/quang/xuan/PROJECT/e_commerce/client/src/reducers/orderReducer.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":24},{"ruleId":"163","severity":1,"message":"167","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":14},{"ruleId":"163","severity":1,"message":"168","line":13,"column":12,"nodeType":"165","messageId":"166","endLine":13,"endColumn":23},{"ruleId":"163","severity":1,"message":"169","line":13,"column":25,"nodeType":"165","messageId":"166","endLine":13,"endColumn":39},{"ruleId":"170","severity":1,"message":"171","line":9,"column":13,"nodeType":"172","endLine":9,"endColumn":44},{"ruleId":"173","severity":1,"message":"174","line":1,"column":1,"nodeType":"175","endLine":44,"endColumn":3},{"ruleId":"176","severity":1,"message":"177","line":25,"column":8,"nodeType":"178","endLine":25,"endColumn":10,"suggestions":"179"},{"ruleId":"163","severity":1,"message":"180","line":2,"column":10,"nodeType":"165","messageId":"166","endLine":2,"endColumn":22},{"ruleId":"173","severity":1,"message":"174","line":18,"column":1,"nodeType":"175","endLine":81,"endColumn":2},{"ruleId":"176","severity":1,"message":"181","line":17,"column":9,"nodeType":"178","endLine":17,"endColumn":11,"suggestions":"182"},{"ruleId":"163","severity":1,"message":"164","line":4,"column":18,"nodeType":"165","messageId":"166","endLine":4,"endColumn":34},{"ruleId":"163","severity":1,"message":"167","line":8,"column":8,"nodeType":"165","messageId":"166","endLine":8,"endColumn":14},{"ruleId":"163","severity":1,"message":"183","line":1,"column":10,"nodeType":"165","messageId":"166","endLine":1,"endColumn":16},{"ruleId":"176","severity":1,"message":"184","line":31,"column":8,"nodeType":"178","endLine":31,"endColumn":18,"suggestions":"185"},{"ruleId":"176","severity":1,"message":"184","line":40,"column":8,"nodeType":"178","endLine":40,"endColumn":18,"suggestions":"186"},{"ruleId":"163","severity":1,"message":"187","line":13,"column":24,"nodeType":"165","messageId":"166","endLine":13,"endColumn":37},{"ruleId":"176","severity":1,"message":"188","line":38,"column":8,"nodeType":"178","endLine":38,"endColumn":17,"suggestions":"189"},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'CircularProgress' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","'searchValue' is assigned a value but never used.","'setSearchValue' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'productId'. Either include them or remove the dependency array.","ArrayExpression",["192"],"'detailsOrder' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["193"],"'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["194"],["195"],"'setActiveStep' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'order._id', and 'props.history'. Either include them or remove the dependency array.",["196"],"no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"201","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [dispatch, productId]",{"range":"206","text":"207"},"Update the dependencies array to be: [dispatch]",{"range":"208","text":"209"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"210","text":"211"},{"range":"212","text":"211"},"Update the dependencies array to be: [dispatch, order._id, props.history, success]",{"range":"213","text":"214"},[1059,1061],"[dispatch, productId]",[648,650],"[dispatch]",[1029,1039],"[props.history, redirect, userInfo]",[1549,1559],[1488,1497],"[dispatch, order._id, props.history, success]"]